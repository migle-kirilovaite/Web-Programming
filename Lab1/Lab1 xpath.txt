1.
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Name/ancestor::Yarn
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/descendant::Stock
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Name/following-sibling::Price
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Stock/preceding-sibling::Name
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Name/following::Stock
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Stock/preceding::Name
/Supplies/Yarn[@type='cotton']/Manufacturer[@brand='YarnArt']/Item/Stock/attribute::color

2.
//t:Hooks[@type = //t:Hooks[1]/@type]

3.
count(//text()[normalize-space()])
sum(//Price)
<a><b>2</b><c>3</c></a> sum(//*) 23 (iš elemento <a>) + 2 (iš elemento <b>) + 3 (iš elemento <c>) = 28

4.
//Item[Price < 3.00]
//Item[Name='YarnArt Jeans']
//t:Item[t:Price/@currency = //Yarn/Manufacturer/Item/Price/@currency]
//Item[Name='YarnArt Jeans']/Price + //Item[Name='Gazzal Baby Cotton']/Price

5.
//t:Item[t:Price > 2.60 ]
//t:Item[t:Price > 2.60 ]/ancestor::t:Needles
//t:Item[t:Price > 2.60 ]/ancestor::t:Needles/descendant::t:Name

6.
1. aibę ir skaičių
//Item/Price = 1.80
2. aibę ir eilutę
//Item/Name = "YarnArt Jeans"
3. aibę ir loginę reikšmę
boolean(//Manufacturer[@brand = "Gazzal"]/Item/Name/text())
4. dvi aibes
//Item[Price] != //Item[Stock]

7.
//Yarn[@type='cotton']/Manufacturer/Item/Price < //Yarn[@type='Wool']/Manufacturer/Item/Price

8.
Kai norima ištraukti duomenis iš interneto svetainių.
Testavimo Automatizavimas.
XML Duomenų Apdorojimas.
